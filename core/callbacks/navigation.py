import asyncio
import json

from aiogram.fsm.state import StatesGroup, State

import logging

from core.database.models import OrderRequest, UserRole
from core.handlers.user_commands import *
from core.keyboards.reply import *

router = Router()

from core.keyboards.builders import *
from core.utils.faq import detect_intent_texts


class FAQ(StatesGroup):
    waiting_for_question = State()


@router.message(or_f(Command('order'), F.text.lower == "–ó–∞–∫–∞–∑", F.text.lower == "–∑–∞–∫–∞–∑–∞—Ç—å"))
@router.callback_query(F.data == 'order')
async def order(message: Union[Message, CallbackQuery], bot: Bot):
    text = (
        f"<b>üì± –ó–∞–∫–∞–∑ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–∞</b> \n\n"
        f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∫—Ä–∞—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É. "
        f"–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≤–∞—à–∏–º "
        f"–æ–∂–∏–¥–∞–Ω–∏—è–º.\n\n"
        f"–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞ "
        f"–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤.\n\n"

        f"–ù–∞–∂–º–∏—Ç–µ <b>'–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É'</b>, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω–∫–µ—Ç–µ, –∏–ª–∏ <b>'–û—Ç–º–µ–Ω–∞'</b>, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é."
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/order.png'

    chat_id = message.message.chat.id if isinstance(message, CallbackQuery) else message.chat.id

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    sent_message = await bot.send_photo(
        chat_id,
        photo=image_path,  # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        caption=text,
        reply_markup=order_keyboard
    )

    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ update_last_message_id
    await update_last_message_id(bot, sent_message.message_id, chat_id)


@router.message(F.web_app_data)
async def web_order(message: Message, bot: Bot, state: FSMContext):
    res = json.loads(message.web_app_data.data)
    sent_message = await message.answer(f'–°–ø–∞—Å–∏–±–æ {res["name"]}, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è! ü§ó\n\n'
                                        f'<i>–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...</i>')
    await update_last_message_id(bot, sent_message.message_id, message.from_user.id)
    await asyncio.sleep(5)
    await start(message, bot, state)

    # –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Å—Å–∏—é —Å –≤–∞—à–µ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    async with async_session() as session:
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
        result = await session.execute(select(User).where(User.telegram_id == message.from_user.id))

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
        user = result.scalar()
        if user:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ order_requests —Å user.id
            order_request = OrderRequest(
                user_id=user.id,
                phone=res["phone"],
                email=res["email"],
                description=res["description"],
                contact_via_telegram=res["contactViaTelegram"]
            )
            session.add(order_request)
            await session.commit()

            # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
            contact_request = "–î–∞" if res["contactViaTelegram"] else "–ù–µ—Ç"
            admin_message = (
                f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {res['name']}:\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {res['phone']}\n"
                f"Email: {res['email']}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {res['description']}\n"
                f"–°–≤—è–∑—å —á–µ—Ä–µ–∑ Telegram: {contact_request}"
            )

            await notify_admins_and_mods(bot, session, admin_message)

        else:
            await message.answer(f'–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')


async def notify_admins_and_mods(bot, session, message, include_moderators=True):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    roles_to_notify = [UserRole.admin]
    if include_moderators:
        roles_to_notify.append(UserRole.moderator)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞—Ö
    admins_and_mods = await session.execute(select(User).where(User.role.in_(roles_to_notify)))
    admins_and_mods = admins_and_mods.scalars().all()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º
    for admin_or_mod in admins_and_mods:
        try:
            await bot.send_message(admin_or_mod.telegram_id, message, parse_mode='HTML')
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {admin_or_mod.telegram_id}: {e}")





@router.callback_query(F.data == 'bot_examples')
async def bot_examples(query: CallbackQuery, bot: Bot):

    text = (
        f"<b>ü§ñ –ü—Ä–∏–º–µ—Ä—ã —á–∞—Ç-–±–æ—Ç–æ–≤</b>\n\n"
        f"–í BotNest –º—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–∞—Ç-–±–æ—Ç—ã, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–ª–∏ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. "
        f"–ò—Å—Å–ª–µ–¥—É—è –Ω–∞—à–∏ –ø—Ä–∏–º–µ—Ä—ã, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫–æ–π —Ç–∏–ø –±–æ—Ç–∞ –ø–æ–¥–æ–π–¥–µ—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.\n\n"
        f"<b>–í—ã–±–∏—Ä–∞–π—Ç–µ, –∏—Å—Å–ª–µ–¥—É–π—Ç–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–π—Ç–µ—Å—å</b> ‚Äì –≤–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ "
        f"—Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏–ª–∏ –ª–∏—á–Ω—ã—Ö –Ω—É–∂–¥!"
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/examples.png'

    await query_message_photo(query, bot, text, image_path, examples_type)



@router.callback_query(F.data == 'info_examples')
async def info_examples(query: CallbackQuery, bot: Bot):
    text = (
        f"<b>üì¢ –ü—Ä–∏–º–µ—Ä—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤</b>\n\n"
        f"–í —Ä–∞–∑–¥–µ–ª–µ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ—Ç—ã –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —á–∞—Ç-–±–æ—Ç–æ–≤ Telegram, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ "
        f"–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã—Ö.\n\n"
        f"–≠—Ç–∏ –±–æ—Ç—ã —Å—Ç–∞–Ω—É—Ç –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏ –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, "
        f"–∫–æ—Ç–∏—Ä–æ–≤–æ–∫ –∞–∫—Ü–∏–π, –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –∏ –º–Ω–æ–≥–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ –ø—Ä—è–º–æ –≤ Telegram."
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/info.png?v=2'

    await query_message_photo(query, bot, text, image_path, info_type)



@router.callback_query(F.data == 'ai_examples')
async def ai_examples(query: CallbackQuery, bot: Bot):
    text = (
        f"<b>ü§ñ –ü—Ä–∏–º–µ—Ä—ã AI —á–∞—Ç-–±–æ—Ç–æ–≤</b>\n\n"
        f"–í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ —Å –Ω–∞—à–∏–º–∏ –ò–ò —á–∞—Ç-–±–æ—Ç–∞–º–∏! –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Å–æ–∑–¥–∞—Ç—å "
        f"—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–∞ –∑–∞–∫–∞–∑ —É–º–Ω—ã—Ö –ø–æ–º–æ—â–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–∞—à–∏–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏, "
        f"—É–ª—É—á—à–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã.\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –±—É–¥—É—â–µ–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è ‚Äì –∏—Å—Å–ª–µ–¥—É–π—Ç–µ –Ω–∞—à–∏ –ø—Ä–∏–º–µ—Ä—ã —á–∞—Ç-–±–æ—Ç–æ–≤ –Ω–∞ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–µ –∏ "
        f"–Ω–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –≤ –≤–∞—à–µ–º –¥–µ–ª–µ."

    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/AI.png'

    await query_message_photo(query, bot, text, image_path, ai_type)


@router.callback_query(F.data == 'game_examples')
async def game_examples(query: CallbackQuery, bot: Bot):
    text = (
        f"<b>üéÆ –ü—Ä–∏–º–µ—Ä—ã –∏–≥—Ä–æ–≤—ã—Ö —á–∞—Ç-–±–æ—Ç–æ–≤</b>\n\n"
        f"–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–≥—Ä–æ–≤—ã—Ö —á–∞—Ç-–±–æ—Ç–æ–≤ –¥–ª—è Telegram, "
        f"–∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å –æ—Ç–ª–∏—á–Ω—ã–º –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫ –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.\n\n"
        f"–û—Ç —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä —Å –≤—ã–±–æ—Ä–∞–º–∏, –≥–¥–µ –∫–∞–∂–¥–æ–µ –≤–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ö–æ–¥ —Å—é–∂–µ—Ç–∞,"
        f" –¥–æ —Å–µ—Ç–µ–≤—ã—Ö –∏–≥—Ä, –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ "
        f"–∏–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞–º–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ ‚Äî "
        f"–Ω–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—Ç –≤–∞–º –≤–æ–ø–ª–æ—Ç–∏—Ç—å –ª—é–±—É—é –∏–≥—Ä–æ–≤—É—é –∫–æ–Ω—Ü–µ–ø—Ü–∏—é. "
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/gaming.png'

    await query_message_photo(query, bot, text, image_path, games_type)


@router.callback_query(F.data == 'business_examples')
async def business_examples(query: CallbackQuery, bot: Bot):
    text = (
        f"<b>üè¢ –ü—Ä–∏–º–µ—Ä—ã —á–∞—Ç-–±–æ—Ç–æ–≤ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞</b>\n\n"
        f"–í –ø–æ–∏—Å–∫–∞—Ö –∏–¥–µ–π –¥–ª—è —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞? –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ —á–∞—Ç-–±–æ—Ç–æ–≤, "
        f"—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ "
        f"–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ —É—Å–ª—É–≥ –∏ —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
        f"–ß–∞—Ç-–±–æ—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å –≤–∞—à–∏–º–∏ –Ω–∞–¥–µ–∂–Ω—ã–º–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤, "
        f"—É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –ø—Ä–æ–¥–∞–∂ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤."
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/busines.png?v=2'

    await query_message_photo(query, bot, text, image_path, business_type)


@router.callback_query(F.data == 'service_examples')
async def service_examples(query: CallbackQuery, bot: Bot):
    text = (
        f"<b>üõ† –ü—Ä–∏–º–µ—Ä—ã —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö –±–æ—Ç–æ–≤</b>\n\n"
        f"–í —Ä–∞–∑–¥–µ–ª–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —á–∞—Ç-–±–æ—Ç—ã Telegram, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö "
        f"–∑–∞–¥–∞—á –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä—É—Ç–∏–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä.\n\n–≠—Ç–∏ –±–æ—Ç—ã –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö "
        f"—Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –ø–æ–º–æ–≥–∞—è —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –≤–∞—à–µ –≤—Ä–µ–º—è –∏ —É—Å–∏–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å."
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/service.png?v=2'

    await query_message_photo(query, bot, text, image_path, service_type)


@router.callback_query(F.data == 'fin_trigger')
async def fin_trigger(query: CallbackQuery, bot: Bot):
    text = (
        "<b>–°–µ—Ç–µ–≤–∞—è –∏–≥—Ä–∞ - Final Trigger</b> \n\n"
        "–ò—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ–π –∏–≥—Ä–µ —Ä—É—Å—Å–∫–æ–π —Ä—É–ª–µ—Ç–∫–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–≥—Ä–æ–≤—ã–º –±–æ—Ç–æ–º - Final Trigger! –°—Ä–∞–∑–∏—Ç–µ—Å—å —Å "
        "—Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º, —É –∫–æ–≥–æ –∏–∑ –≤–∞—Å –±–æ–ª—å—à–µ —Å–º–µ–ª–æ—Å—Ç–∏ –∏ —É–¥–∞—á–∏.\n\n"
        "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –≤—ã–∂–∏—Ç—å –≤ —Å–µ—Ä–∏–∏ —Ä–∞—É–Ω–¥–æ–≤, –≥–¥–µ —Å–º–µ—Ä—Ç–µ–ª—å–Ω–∞—è —É–≥—Ä–æ–∑–∞ —Å–∫—Ä—ã—Ç–∞ –≤ –∫–∞–∂–¥–æ–º –≤—ã—Å—Ç—Ä–µ–ª–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏"
        " –∏–Ω—Ç—É–∏—Ü–∏—é, —á—Ç–æ–±—ã –≤—ã–±–∏—Ä–∞—Ç—å –º–µ–∂–¥—É —Ä–∏—Å–∫–æ–º –¥–ª—è —Å–µ–±—è –∏–ª–∏ –∞—Ç–∞–∫–æ–π –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. –ö–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ - –Ω–æ–≤—ã–π –Ω–∞–±–æ—Ä –ø–∞—Ç—Ä–æ–Ω–æ–≤, "
        "–∫–∞–∂–¥—ã–π —Ö–æ–¥ - –≤–∞–∂–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ. –ü–æ–±–µ–¥–∏—Ç–µ–ª—å - —Ç–æ—Ç, –∫—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –∂–∏–≤—ã—Ö.\n\n"
        "<i>–î–∞–Ω–Ω–∞—è –∏–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –±—É–¥—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ —Ä–∞–º–∫–∞—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ BotNest\n\n"
        "–î–∞–Ω–∞—è –∏–≥—Ä–∞ —Ö–æ—Ä–æ—à–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–µ–≤—ã—Ö –∏–≥—Ä –≤ Telegram: "
        "–≤ –Ω–µ–π –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞, —Å–∏—Å—Ç–µ–º–∞ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã –∏ –∏–≥—Ä–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞.\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å–µ—Ç–µ–≤–æ–π –∏–≥—Ä—ã –ø–æ —Å–≤–æ–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∏ –∂–µ–ª–∞–Ω–∏—è–º.</i>"
    )

    # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏–ª–∏ URL
    image_path = 'https://botnest.ru/wp-content/uploads/2024/game/finaltrigger/Final_Trigger.png'

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    sent_message = await query.bot.send_photo(
        query.message.chat.id,
        photo=image_path,  # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        caption=text,
        reply_markup=inline_builder(final_trigger)
    )

    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ update_last_message
    await update_last_message_id(bot, sent_message.message_id, query.from_user.id)


@router.callback_query(F.data == 'contacts')
async def contacts(query: CallbackQuery, bot: Bot):
    site = "botnest.ru"
    email = "info@botnest.ru"

    text = (
        f"<b>ü§ù –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</b> \n\n"
        f"–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –æ–±—â–µ–Ω–∏—é –∏ –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. –í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏:\n\n"
        f"<b>–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ:</b> {site} ‚Äì –∑–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ —Ç–∞–∫–∂–µ —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.\n"
        f"<b>–ü–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ:</b> {email} ‚Äì –ø–∏—à–∏—Ç–µ –Ω–∞–º, –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–º.\n\n"
        f"–ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –µ—Å—Ç—å —É –≤–∞—Å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –±–æ—Ç–∞, –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –º—ã –≤—Å–µ–≥–¥–∞ –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º."
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/contacts.png'

    await query_message_photo(query, bot, text, image_path, contact_menu)


@router.callback_query(F.data == 'faq')
async def enter_faq(query: CallbackQuery, state: FSMContext, bot: Bot):
    await state.set_state(FAQ.waiting_for_question)

    text = (
        f"<b>üí¨ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)</b> \n\n"
        f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è —Ä–∞–±–æ—Ç—ã –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏, –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –Ω–∏—Ö –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç. "
        f"–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –±–µ–∑ —É—á–∞—Å—Ç–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ.\n\n"
        f"–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ—Ç–≤–µ—Ç—ã - –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞', —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ <b>FAQ</b>."
    )
    image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/faq.png'

    await query_message_photo(query, bot, text, image_path, cancel_faq)


@router.message(FAQ.waiting_for_question, F.text)
async def process_question(message: Message, bot: Bot, state: FSMContext):
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π "–û—Ç–º–µ–Ω–∞"
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤—ã—Ö–æ–¥–∏–º –∏–∑ FAQ)
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ FAQ.", reply_markup=ReplyKeyboardRemove())
        await start(message, bot, state)
        return  # –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –≤ Dialogflow, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ "–û—Ç–º–µ–Ω–∞"
    response_text = detect_intent_texts(message.text)
    if not response_text:
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ None, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É
        response_text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å, –Ω–æ –≤ –±—É–¥—É—â–µ–º —è –µ–≥–æ –Ω–∞–π–¥—É üòâ"

    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    sent_message = await message.answer(response_text, reply_markup=inline_builder(cancel_faq))
    await update_last_message_id(bot, sent_message.message_id, message.from_user.id)


async def query_message_photo(query: CallbackQuery, bot: Bot, text: str, image_path: str, inline_builder_key,
                              is_inline=True):
    if is_inline:
        # –ï—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–Ω–ª–∞–π–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë —á–µ—Ä–µ–∑ builder –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—ë–º –Ω–∞–ø—Ä—è–º—É—é
        reply_markup = inline_builder(inline_builder_key)
    else:
        # –ï—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±—ã—á–Ω–∞—è, —Ç–æ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –æ–Ω–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é
        reply_markup = inline_builder_key

    sent_message = await query.bot.send_photo(
        query.message.chat.id,
        photo=image_path,
        caption=text,
        reply_markup=reply_markup
    )
    await update_last_message_id(bot, sent_message.message_id, query.from_user.id)
    await query.answer()


async def query_message_video(query: CallbackQuery, bot: Bot, text: str, video_path: str, inline_builder_key,
                              is_inline=True):
    if is_inline:
        # –ï—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–Ω–ª–∞–π–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë —á–µ—Ä–µ–∑ builder –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—ë–º –Ω–∞–ø—Ä—è–º—É—é
        reply_markup = inline_builder(inline_builder_key)
    else:
        # –ï—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±—ã—á–Ω–∞—è, —Ç–æ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –æ–Ω–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é
        reply_markup = inline_builder_key

    sent_message = await query.bot.send_video(
        query.message.chat.id,
        video=video_path,
        caption=text,
        reply_markup=reply_markup
    )
    await update_last_message_id(bot, sent_message.message_id, query.from_user.id)
    await query.answer()


async def query_message_animation(query: CallbackQuery, bot: Bot, text: str, image_path: str, inline_builder_key):
    sent_message = await query.bot.send_animation(
        query.message.chat.id,
        animation=image_path,
        caption=text,
        reply_markup=inline_builder(inline_builder_key)
    )
    await update_last_message_id(bot, sent_message.message_id, query.from_user.id)
    await query.answer()


async def query_message(query: CallbackQuery, bot: Bot, text: str, inline_builder_key):
    sent_message = await query.message.answer(text, reply_markup=inline_builder(inline_builder_key))

    await update_last_message_id(bot, sent_message.message_id, query.from_user.id)
    await query.answer()
