from datetime import datetime
import asyncio

from aiogram import Router, F, Bot
from aiogram.client import bot
from aiogram.enums import ChatType
from aiogram.types import Message, CallbackQuery, LabeledPrice, PreCheckoutQuery

from core.callbacks.navigation import query_message_photo
from core.handlers.callback import update_last_message_id

from core.keyboards.builders import inline_builder
from core.projects.business.subscribe_bot.database.requests import Database
from core.projects.business.subscribe_bot.keyboards.builders import sub_key_main, nosub_key_main, sub_key_buy, \
    sub_key_after_buy

router = Router()

db = Database()



@router.callback_query(F.data == 'sub_main')
async def main_menu_handler(query: CallbackQuery, bot: Bot):
    telegram_id = query.from_user.id
    subscription_info = await db.check_user_subscription(telegram_id)
    subscription_active = subscription_info if subscription_info else False


    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    if subscription_active:
        status_text = "üü¢ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞"
    else:
        status_text = "üî¥ –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏. \n\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Ä–æ–∫–∞–º."

    text = (
        f"üåü <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NestLearn!</b>\n\n"
        f"–í–∞—à –∫–ª—é—á –∫ –º–∏—Ä—É –∑–Ω–∞–Ω–∏–π –∏ —Å–µ–∫—Ä–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–µ–¥–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–æ–≤ –∂–¥–µ—Ç –≤–∞—Å! üöÄ\n"
        f"–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –∏ –≥–∞–π–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É –≤—ã—Ä–∞—Å—Ç–∏ –∏ –∑–∞–∂–µ—á—å –∞—É–¥–∏—Ç–æ—Ä–∏—é.\n\n"
        f"{status_text}\n\n"
        f"<i>–î–∞–Ω–Ω—ã–π –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º –ø—Ä–∏–º–µ—Ä–æ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–µ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É –ø–æ –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ.\n"
        f"–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –º–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª—é–±—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º!</i>"
    )

    if subscription_active:
        await query_message_photo(query, bot, text,
                                  "https://botnest.ru/wp-content/uploads/2024/botnest/images/learnnestbot.png",
                                  sub_key_main)
    else:
        await query_message_photo(query, bot, text,
                                  "https://botnest.ru/wp-content/uploads/2024/botnest/images/learnnestbot.png",
                                  nosub_key_main)


@router.callback_query(F.data == 'sub_learn')
async def order_history(query: CallbackQuery, bot: Bot):
    await query.answer("–ó–¥–µ—Å—å –º–æ–≥–ª–∏ –±—ã—Ç—å –≤–∞—à–∏ —É—Ä–æ–∫–∏ üòé", show_alert=True)

@router.callback_query(F.data == "subscription")
async def checkout(query: CallbackQuery, bot: Bot):

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∏–Ω–≤–æ–π—Å–µ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    first_item_photo_url = 'https://botnest.ru/wp-content/uploads/2024/botnest/images/learnnestbot.png'

    text = (f'\n–î–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ä—Ç—ã:' \
            f'\n\n–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 1111 1111 1111 1026,' \
            f'\n–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞: 12/22,' \
            f'\nCVC: 000\n')

    prices = [LabeledPrice(label="–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", amount=10000)]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–≤–æ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    send_message = await bot.send_invoice(
        chat_id=query.message.chat.id,
        title='–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ NestLearn',
        description=text,
        payload='sub',
        provider_token='381764678:TEST:73182',
        currency='rub',
        prices=prices,
        need_name=False,
        need_phone_number=False,
        need_shipping_address=False,
        need_email=False,
        start_parameter='sub',
        send_email_to_provider=False,
        send_phone_number_to_provider=False,
        provider_data=None,
        photo_url=first_item_photo_url,
        protect_content=False,
        reply_markup=inline_builder(sub_key_buy),
        allow_sending_without_reply=True,
    )

    await update_last_message_id(bot, send_message.message_id, query.from_user.id)
    await query.answer()


@router.pre_checkout_query()
async def handle_pre_checkout_query(query: PreCheckoutQuery, bot: Bot):
    if query.invoice_payload.startswith("sub"):
        await bot.answer_pre_checkout_query(query.id, ok=True)
    elif query.invoice_payload.startswith("phone"):
        await bot.answer_pre_checkout_query(query.id, ok=True)

@router.message(F.successful_payment)
async def handle_successful_payment(message: Message, bot: Bot):
    payload = message.successful_payment.invoice_payload
    if payload.startswith("sub"):
        user_id = message.from_user.id
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ Database
        await db.activate_subscription(user_id)  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        text = "üéâ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —É—Ä–æ–∫–∞–º."
        image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/shop/photo/pay.png?_t=1707660307'
        sent_message = await bot.send_photo(
            message.chat.id,
            photo=image_path,  # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            caption=text,
            reply_markup=inline_builder(sub_key_after_buy)
        )
        await update_last_message_id(bot, sent_message.message_id, user_id)
    elif payload.startswith("phone"):
        telegram_id = message.from_user.id

        user_id = message.from_user.id

        # –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cart_items = await db.get_checkout_items(user_id)
        if cart_items:
            # –®–∞–≥ 2: –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ PurchaseHistory
            total_amount = message.successful_payment.total_amount / 100  # Telegram –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤ –∫–æ–ø–µ–π–∫–∞—Ö
            purchase_id = await db.add_purchase_history(user_id, total_amount, cart_items)

            # –®–∞–≥ 3: –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ PurchaseDetail
            for cart_item, product_name, stock_quantity, price, color in cart_items:
                await db.add_purchase_detail(purchase_id, cart_item.product_id, cart_item.quantity, price)

        await db.clear_user_cart(user_id)

        text = (
            f"<b>üí¨ –£—Å–ø–µ—à–Ω–æ!</b> \n\n"
            f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ–±–Ω—É—é –æ–ø–ª–∞—Ç—É —Ç–æ–≤–∞—Ä–∞, –ø—Ä–∏ —ç—Ç–æ–º –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ {message.successful_payment.total_amount // 100} –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö {message.successful_payment.currency}.\n\n"
            f"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–∫–æ–π –∂–µ –±–æ—Ç, —Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∏–∂–µ."
        )
        image_path = 'https://botnest.ru/wp-content/uploads/2024/botnest/shop/photo/pay.png?_t=1707660307'
        sent_message = await bot.send_photo(
            message.chat.id,
            photo=image_path,  # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            caption=text,
            reply_markup=inline_builder(buy)
        )
        await update_last_message_id(bot, sent_message.message_id, telegram_id)
